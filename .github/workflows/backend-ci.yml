name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:5
        ports:
          - 7687:7687
          - 7474:7474
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4J_PLUGINS: '["apoc"]'
        options: >-
          --health-cmd "wget http://localhost:7474 || exit 1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'backend/requirements.txt'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        python -m flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        python -m flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format check with black
      run: |
        python -m black --check app/

    - name: Type check with mypy
      run: |
        python -m mypy app/ --ignore-missing-imports

    - name: Test with pytest
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: testpassword
        SECRET_KEY: test-secret-key-for-ci
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID || 'test-sid' }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN || 'test-token' }}
        TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER || '+1234567890' }}
      run: |
        python -m pytest -v --tb=short

    - name: Generate coverage report
      if: github.event_name == 'pull_request'
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: testpassword
        SECRET_KEY: test-secret-key-for-ci
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID || 'test-sid' }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN || 'test-token' }}
        TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER || '+1234567890' }}
      run: |
        pip install pytest-cov
        python -m pytest --cov=app --cov-report=xml --cov-report=html

    - name: Upload coverage reports
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend/htmlcov/